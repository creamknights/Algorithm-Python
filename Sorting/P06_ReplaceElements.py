""" 
<두 배열의 원소 교체>
N개의 자연수 원소로 구성된 두 개의 배열 A, B
최대 K번의 바꿔치기 연산 수행 가능
바꿔치기 연산: 배열 A에 있는 원소 하나와 배열 B에 있는 원소 하나를 골라서 두 원소를 서로 바꾸는 것
최종 목표는 배열 A의 모든 원소의 합이 최대가 되도록 하는 것 (최댓값 출력)

N = 5, K = 3, 
A = [1, 2, 5, 4, 3]
B = [5, 5, 6, 6, 5]

연산 1) A의 1과 B의 6 바꾸기
연산 2) A의 2와 B의 6 바꾸기
연산 3) A의 3과 B의 5 바꾸기

A의 원소 합 6 + 6 + 5 + 4 + 5 = 26 (최댓값)

[문제 해결 아이디어]
매번 배열 A에서 가장 작은 원소를 골라서, 배열 B에서 가장 큰 원소와 교체
가장 먼저 배열 A, B가 주어지면 A에 대하여 오름차순 정렬, B에 대하여 내림차순 정렬
두 배열의 원소를 첫 번째 인덱스부터 차례로 확인하면서 A의 원소가 B의 원소보다 작을 때에만 교체 수행
(두 배열의 원소가 최대 100,000개까지 입력될 수 있는 문제이므로 최악의 경우 O(NlogN)을 보장하는 정렬 알고리즘을 이용해야 한다.)

"""

n, k = map(int, input().split())    # N, K 입력 받기
a = list(map(int, input().split()))    # 배열 A의 모든 원소 입력 받기
b = list(map(int, input().split()))    # 배열 B의 모든 원소 입력 받기

a.sort()    # 배열 A는 오름차순 정렬
b.sort(reverse=True)    # 배열 B는 내림차순 정렬

# 첫 번째 인덱스부터 확인하며 두 배열의 원소를 최대 K번 비교
for i in range(k):
    # A의 원소가 B의 원소보다 작은 경우
    if a[i] < b[i]:
        # 두 원소를 교체
        a[i], b[i] = b[i], a[i]
    else:    # A의 원소가 B의 원소보다 크거나 같을 때 반복문 탈출
        break

print(sum(a))