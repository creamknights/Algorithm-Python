""" 
DFS(Depth-First Search)
깊이 우선 탐색
그래프에서 깊은 부분을 우선적으로 탐색
스택 자료구조 혹은 재귀 함수 이용

1. 탐색 시작 노드를 스택에 삽입하고 방문 처리 (push)
2. 스택의 최상단 노드와 인접한 노드 중에서 방문하지 않은 노드가 하나라도 있으면 그 노드를 스택에 넣고 방문 처리 (push)
    최상단 노드와 인접한 노드 중에서 방문하지 않은 노드가 없으면 스택에서 최상단 노드를 다시 꺼낸다. (pop)
3. 더 이상 2번의 과정을 수행할 수 없을 때까지 반복
"""

""" 
파이썬에서는 그래프를 표현하기 위해 2차원 리스트 형태를 사용
일반적으로 그래프 문제가 출제되면 노드의 번호가 1번부터 시작하는 경우가 많기 때문에
리스트의 인덱스 0은 비워둔다.
"""

# DFS 메서드 정의
def dfs(graph, v, visited):
    # 현재 노드를 방문 처리
    visited[v] = True
    print(v, end=' ')
    # 현재 노드와 연결된 다른 노드를 재귀적으로 방문
    for i in graph[v]:
        if not visited[i]:    # 인접한 노드가 방문 상태가 아닌 경우
            dfs(graph, i, visited)    # 재귀 함수를 이용해 방문
            
# 각 노드가 연결된 정보를 표현 (2차원 리스트)
graph = [
    [],
    [2, 3, 8],    # 1번 노드와 인접한 노드 리스트
    [1, 7],
    [1, 4, 5],
    [3, 5],
    [3, 4],
    [7],
    [2, 6, 8],
    [1, 7]
]

# 각 노드가 방문된 정보를 표현 (1차원 리스트)
visited =[False] * 9

# 정의된 DFS 함수 호출
dfs(graph, 1, visited) # 1 2 7 6 8 3 4 5